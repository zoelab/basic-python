#1.The squirrels in Palo Alto spend most of the day playing. In particular, they play if the temperature is between 60 and 90 (inclusive). Unless it is summer, then the upper limit is 100 instead of 90. Given an int temperature and a boolean is_summer, return True if the squirrels play and False otherwise.

def squirrel_play(temp, is_summer):
  if temp in range(60,91) and is_summer==False:
    return True
  elif temp in range(60,101) and is_summer==True:
    return True
  else:
    return False
   
#2.You are driving a little too fast, and a police officer stops you. Write code to compute the result, encoded as an int value: 0=no ticket, 1=small ticket, 2=big ticket. If speed is 60 or less, the result is 0. If speed is between 61 and 80 inclusive, the result is 1. If speed is 81 or more, the result is 2. Unless it is your birthday -- on that day, your speed can be 5 higher in all cases.

def caught_speeding(speed, is_birthday):
  if is_birthday ==False:
    if speed<=60:
      return 0
    elif speed in range(61,81):
      return 1
    elif speed>80:
      return 2
  else:
    if speed<=66:
      return 0
    elif speed in range(65,87):
      return 1
    elif speed>=86:
      return 2
      
 #3.Given 2 ints, a and b, return their sum. However, sums in the range 10..19 inclusive, are forbidden, so in that case just return 20.
      
 def sorta_sum(a, b):
     a=a+b
     if a in range(10,20):
         return 20
     else:
         return a
            
#4.Given a day of the week encoded as 0=Sun, 1=Mon, 2=Tue, ...6=Sat, and a boolean indicating if we are on vacation, return a string of the form "7:00" indicating when the alarm clock should ring. Weekdays, the alarm should be "7:00" and on the weekend it should be "10:00". Unless we are on vacation -- then on weekdays it should be "10:00" and weekends it should be "off".
  def alarm_clock(day, vacation):
      if vacation== False:
          if day in range(1,6):
               return '7:00'
           else:
               return '10:00'
      if vacation==True:
           if day in range(1,6):
                 return '10:00'
           else:
                 return 'off'
                  
 #5.Given a number n, return True if n is in the range 1..10, inclusive. Unless outside_mode is True, in which case return True if the number is less or equal to 1, or greater or equal to 10.
   def in1to10(n, outside_mode):
        if outside_mode==False and n in range(1,11):
              return True
        elif outside_mode==True and (n<=1 or n>=10):
              return True
         else:
              return False
              
 #6.Given a non-negative number "num", return True if num is within 2 of a multiple of 10. Note: (a % b) is the remainder of dividing a by b, so (7 % 5) is 2.
  def near_ten(num):
       a=num-2
       b=num-1
       c=num+1
       d=num+2
       if a%10==0 or b%10==0 or c%10==0 or d%10==0 or num%10==0:
           return True
       else:
           return False

#7.We want to make a row of bricks that is goal inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return True if it is possible to make the goal by choosing from the given bricks. 
   def make_bricks(small, big, goal):
       big_needed=int(goal/5)
       small_needed=goal-(5*big_needed)
        if big_needed<=big:
           if small_needed<=small:
               return True
           else:
               return False
        elif big_needed>big:
            remaining_small=goal-5*big
            if remaining_small<=small:
               return True
            else:
               return False
    
    

